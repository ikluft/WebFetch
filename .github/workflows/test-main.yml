---
name: Perl_WebFetch
# yamllint disable rule:line-length
on:  # yamllint disable-line rule:truthy
  push:
    paths: 'main/**'
  pull_request:
    paths: 'main/**'
  workflow_dispatch:
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu-latest]  # , macos-latest, windows-latest]
        perl: ['5.36']
        exclude:
          - runner: windows-latest
            perl: '5.36'
    runs-on: ${{matrix.runner}}
    name: OS ${{matrix.runner}} Perl ${{matrix.perl}}
    steps:
      - uses: actions/checkout@v2
      - name: Set up perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl }}
          distribution: >
            ${{ ( startsWith( matrix.runner, 'windows-' ) && 'strawberry' ) || 'default' }}
      - name: Show Perl Version
        run: |
          perl -v
          perl -Mfeature=say -e 'say "INC: ".join " ", @INC;'
      - name: Install external dependency
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        run: |
          sudo apt update
          sudo apt install -y libdb-dev libwww-perl
      # - name: Install dependency for OSX
      #   if:  ${{ matrix.runner == 'macos-latest' }}
      #   run: brew install berkeley-db
      - name: Install Dist::Zilla
        run: |
          cpanm -v
          cpanm --dev --notest ExtUtils::MakeMaker~'>= 7.65_02'  # use dev release with fix for spurious errors
          cpanm --notest Sys::OsPackage
          fetch-reqs.pl --sudo --notest XML::Parser HTML::Parser Moose Math::Base::Convert XML::DOM SQL::Statement Test::Inter Test::Pod Test::More Log::Log4perl
          fetch-reqs.pl --sudo --notest Dist::Zilla
          dzil --version
      - name: Install Authordeps Modules
        run: |
          cd main
          dzil authordeps --missing | fetch-reqs.pl --sudo --notest
      - name: Install Listdeps Modules
        run: |
          cd main
          pwd
          ls -l
          dzil listdeps --missing | fetch-reqs.pl --sudo --notest
      - name: Show Errors on Windows
        if: ${{ failure() && startsWith( matrix.runner, 'windows-')}}
        run: |
           ls -l C:/Users/
           ls -l C:/Users/RUNNER~1/
           cat C:/Users/runneradmin/.cpanm/work/*/build.log
      - name: Show Errors on Ubuntu
        if: ${{ failure() && startsWith( matrix.runner, 'ubuntu-')}}
        run: |
           cat /home/runner/.cpanm/work/*/build.log
      - name: Show Errors on OSX
        if: ${{ failure() && startsWith( matrix.runner, 'macos-')}}
        run: |
           cat  /Users/runner/.cpanm/work/*/build.log
      - name: Run tests
        run: |
          cd main
          dzil test
